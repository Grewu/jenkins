plugins {
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id "com.diffplug.spotless" version "7.0.0.BETA4"
    id 'io.freefair.lombok' version '8.0.1'
}

group 'ru.senla'
version = '1.0.0'

repositories {
    mavenLocal()
    mavenCentral()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = project.name
            version = version

            from components.java
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    springBootVersion = "3.3.4"
    loggingstarterVersion = "1.0.0"
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "ru.senla:logging-starter:${loggingstarterVersion}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("build") {
    dependsOn 'spotlessApply'
    finalizedBy('publishToMavenLocal')
}

tasks.named('compileJava') {
    inputs.files(tasks.named('processResources'))
}

spotless {
    java {
        googleJavaFormat()
        target 'src/**/*.java'
    }
}

jacoco {
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}