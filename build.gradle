plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ru.senla'
version = '1.0.0'


repositories {
    mavenLocal()
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


ext {
    lombokMapstructBindingVersion = '0.2.0'
    mapstructVersion = '1.5.5.Final'
    mockitoVersion = '5.12.0'
    testcontainersVersion = "1.20.2"
    jjwtVersion = '0.11.5'
    exceptionHandlingVersion = '1.0.0'
    lombokMapstructBindingVersion = '0.2.0'
    springDocVersion = '2.1.0'
    jacksonDataTypeVersion = '2.15.2'
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    implementation "ru.senla:exception-handling-starter:${exceptionHandlingVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.liquibase:liquibase-core'

    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    runtimeOnly 'org.postgresql:postgresql'

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDataTypeVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('compileJava') {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-parameters'
    ]
}
